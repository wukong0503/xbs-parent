<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<description>Spring-db公共配置</description>
    <!-- 启用AOP注解 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 配置注解类型的Bean扫描 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.foriseland"/>
    
	<bean id="sequenceInterceptor" class="com.xuebusi.fjf.sequence.interceptor.SequenceInterceptor">
		<property name="saveSqlId" value=".*save.*" />
	</bean>
    
   
	<!-- mybatis 配置start -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		 <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.foriseland.**.**.domain" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:com/foriseland/**/**/mappers/*Mapper.xml" />
		<property name="configLocation" value="classpath:spring/mybatis-config.xml" />  
		<property name="plugins">
	     	<ref bean="sequenceInterceptor" />
		</property>
	</bean>
  
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.foriseland.**.**.dao" />
		<property name="annotationClass" value="com.xuebusi.fjf.annotation.MyBatisRepository" />
	</bean>
	
	<!--org.mybatis.spring.SqlSessionTemplate --> 
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" />
	</bean>
	
	<bean class="com.xuebusi.fjf.datasource.BeanPostPrcessorImpl" />
	
	<aop:config>
		<!-- 定义切面，所有的service的所有方法 execution(* com.foriseland.*..*service.*.*(..))-->
		<aop:pointcut id="txPointcut" expression="execution(* com.foriseland.*..*service..*.*(..))" />
		<!-- 应用事务策略到Service切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
		
		<!-- 将切面应用到自定义的切面处理器上,该切面优先级最高执行 -->
		<aop:aspect ref="dataSourceAspect" order="-9999">
			<aop:before method="before" pointcut-ref="txPointcut" />
			<aop:after  method="clearThreadDataSource" pointcut-ref="txPointcut"/>
		</aop:aspect>
	</aop:config>
	
	<bean class="com.xuebusi.fjf.datasource.DataSourceAspect" id="dataSourceAspect">
		<!-- 指定事务策略 -->
		<property name="txAdvice" ref="txAdvice"/>
		<!-- 指定slave方法的前缀（非必须） -->
		<property name="slaveMethodStart" value="query,find,get,search"/>
	</bean>
	
	  <!-- 多数据源配置 -->
	<bean id="dataSource"
		class="com.xuebusi.fjf.datasource.TradingRoutingDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
			</map>
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--定义查询方法都是只读的 -->
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="get*" read-only="true" />

			<!-- 主库执行操作，事务传播行为定义为默认行为 -->
			<tx:method name="drop*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />

			<!--其他方法使用默认事务策略 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
      
</beans>